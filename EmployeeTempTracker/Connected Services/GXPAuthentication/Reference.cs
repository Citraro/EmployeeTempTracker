//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GXPAuthentication
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.intellinetics.com/", ConfigurationName="GXPAuthentication.GXPAuthenticationSoap")]
    public interface GXPAuthenticationSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.intellinetics.com/LogoutS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> LogoutSAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.intellinetics.com/Logout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> LogoutAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.intellinetics.com/LoginS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GXPAuthentication.LoginSResult> LoginSAsync(string domainName, string loginUserName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.intellinetics.com/LoginProxy", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GXPAuthentication.LoginResult> LoginProxyAsync(string sid, string proxyUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.intellinetics.com/Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GXPAuthentication.LoginResult> LoginAsync(string domainName, string loginUserName, string password, int callerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.intellinetics.com/GetEULA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GXPAuthentication.GetEULAResponse> GetEULAAsync(GXPAuthentication.GetEULARequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.intellinetics.com/IsSessionValid", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> IsSessionValidAsync(string loginSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.intellinetics.com/ChangeLoginUserPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> ChangeLoginUserPasswordAsync(string loginSessionId, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.intellinetics.com/ResetLoginUserPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> ResetLoginUserPasswordAsync(string domainName, string loginUserName, string loginUserEmail);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.intellinetics.com/")]
    public partial class LoginSResult
    {
        
        private ServiceError serviceErrorField;
        
        private string loginSessionIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ServiceError ServiceError
        {
            get
            {
                return this.serviceErrorField;
            }
            set
            {
                this.serviceErrorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LoginSessionID
        {
            get
            {
                return this.loginSessionIDField;
            }
            set
            {
                this.loginSessionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.intellinetics.com/")]
    public partial class ServiceError
    {
        
        private string messageField;
        
        private int errorCodeField;
        
        private string sourceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ErrorCode
        {
            get
            {
                return this.errorCodeField;
            }
            set
            {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Source
        {
            get
            {
                return this.sourceField;
            }
            set
            {
                this.sourceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.intellinetics.com/")]
    public partial class UserAuthObject
    {
        
        private int appIDField;
        
        private long rightsField;
        
        private ApplicationUserRights userRightsField;
        
        private int pALPageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int AppID
        {
            get
            {
                return this.appIDField;
            }
            set
            {
                this.appIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Rights
        {
            get
            {
                return this.rightsField;
            }
            set
            {
                this.rightsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ApplicationUserRights UserRights
        {
            get
            {
                return this.userRightsField;
            }
            set
            {
                this.userRightsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int PALPage
        {
            get
            {
                return this.pALPageField;
            }
            set
            {
                this.pALPageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.intellinetics.com/")]
    public enum ApplicationUserRights : long
    {
        
        /// <remarks/>
        Scanning = 1,
        
        /// <remarks/>
        Indexing = 2,
        
        /// <remarks/>
        Searching = 4,
        
        /// <remarks/>
        Printing = 8,
        
        /// <remarks/>
        AddBookmarksNotes = 16,
        
        /// <remarks/>
        AddVirtualFiles = 32,
        
        /// <remarks/>
        OpenVirtualFiles = 64,
        
        /// <remarks/>
        ImageRedacting = 128,
        
        /// <remarks/>
        ModifyFolderIndexes = 256,
        
        /// <remarks/>
        Deletes = 512,
        
        /// <remarks/>
        ModifyPermissions = 1024,
        
        /// <remarks/>
        OpenInactiveContent = 2048,
        
        /// <remarks/>
        V6XSaveVirtualFiles = 4096,
        
        /// <remarks/>
        V6XQMFullAccess = 8192,
        
        /// <remarks/>
        AttributesUpdateAll = 16384,
        
        /// <remarks/>
        AttributesUpdateOne = 32768,
        
        /// <remarks/>
        V6XQBFullAccess = 65536,
        
        /// <remarks/>
        V6XQBListPublic = 131072,
        
        /// <remarks/>
        FullTextSearch = 262144,
        
        /// <remarks/>
        ChangeDocumentClass = 524288,
        
        /// <remarks/>
        V6XCheckoutFolder = 1048576,
        
        /// <remarks/>
        V6XCheckinListAll = 2097152,
        
        /// <remarks/>
        TransferContent = 4194304,
        
        /// <remarks/>
        V6XAddWebForms = 8388608,
        
        /// <remarks/>
        V6XOpenWebForms = 16777216,
        
        /// <remarks/>
        SearchActivityPublic = 33554432,
        
        /// <remarks/>
        SearchActivityPrivate = 67108864,
        
        /// <remarks/>
        SearchActivityAdmin = 134217728,
        
        /// <remarks/>
        ExportSearchResults = 268435456,
        
        /// <remarks/>
        Annotate = 536870912,
        
        /// <remarks/>
        BulkChangeSearchResults = 1073741824,
        
        /// <remarks/>
        AddVersionedVirtualFiles = 2147483648,
        
        /// <remarks/>
        DeleteFromSearchResults = 4294967296,
        
        /// <remarks/>
        Future2 = 8589934592,
        
        /// <remarks/>
        Future3 = 17179869184,
        
        /// <remarks/>
        Future4 = 34359738368,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.intellinetics.com/")]
    public partial class LoginResult
    {
        
        private ServiceError serviceErrorField;
        
        private UserAuthObject[] userAuthObjectListField;
        
        private string loginSessionIDField;
        
        private int accountIdField;
        
        private int accountStatusField;
        
        private int flagsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ServiceError ServiceError
        {
            get
            {
                return this.serviceErrorField;
            }
            set
            {
                this.serviceErrorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("UserAuthObjectItem")]
        public UserAuthObject[] UserAuthObjectList
        {
            get
            {
                return this.userAuthObjectListField;
            }
            set
            {
                this.userAuthObjectListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LoginSessionID
        {
            get
            {
                return this.loginSessionIDField;
            }
            set
            {
                this.loginSessionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int AccountId
        {
            get
            {
                return this.accountIdField;
            }
            set
            {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int AccountStatus
        {
            get
            {
                return this.accountStatusField;
            }
            set
            {
                this.accountStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Flags
        {
            get
            {
                return this.flagsField;
            }
            set
            {
                this.flagsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEULA", WrapperNamespace="http://www.intellinetics.com/", IsWrapped=true)]
    public partial class GetEULARequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.intellinetics.com/", Order=0)]
        public string domainName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.intellinetics.com/", Order=1)]
        public string userName;
        
        public GetEULARequest()
        {
        }
        
        public GetEULARequest(string domainName, string userName)
        {
            this.domainName = domainName;
            this.userName = userName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEULAResponse", WrapperNamespace="http://www.intellinetics.com/", IsWrapped=true)]
    public partial class GetEULAResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.intellinetics.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetEULAResult;
        
        public GetEULAResponse()
        {
        }
        
        public GetEULAResponse(byte[] GetEULAResult)
        {
            this.GetEULAResult = GetEULAResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface GXPAuthenticationSoapChannel : GXPAuthentication.GXPAuthenticationSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class GXPAuthenticationSoapClient : System.ServiceModel.ClientBase<GXPAuthentication.GXPAuthenticationSoap>, GXPAuthentication.GXPAuthenticationSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public GXPAuthenticationSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(GXPAuthenticationSoapClient.GetBindingForEndpoint(endpointConfiguration), GXPAuthenticationSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GXPAuthenticationSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(GXPAuthenticationSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GXPAuthenticationSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(GXPAuthenticationSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GXPAuthenticationSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<bool> LogoutSAsync(string sessionId)
        {
            return base.Channel.LogoutSAsync(sessionId);
        }
        
        public System.Threading.Tasks.Task<bool> LogoutAsync(string sessionId)
        {
            return base.Channel.LogoutAsync(sessionId);
        }
        
        public System.Threading.Tasks.Task<GXPAuthentication.LoginSResult> LoginSAsync(string domainName, string loginUserName, string password)
        {
            return base.Channel.LoginSAsync(domainName, loginUserName, password);
        }
        
        public System.Threading.Tasks.Task<GXPAuthentication.LoginResult> LoginProxyAsync(string sid, string proxyUserName)
        {
            return base.Channel.LoginProxyAsync(sid, proxyUserName);
        }
        
        public System.Threading.Tasks.Task<GXPAuthentication.LoginResult> LoginAsync(string domainName, string loginUserName, string password, int callerId)
        {
            return base.Channel.LoginAsync(domainName, loginUserName, password, callerId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GXPAuthentication.GetEULAResponse> GXPAuthentication.GXPAuthenticationSoap.GetEULAAsync(GXPAuthentication.GetEULARequest request)
        {
            return base.Channel.GetEULAAsync(request);
        }
        
        public System.Threading.Tasks.Task<GXPAuthentication.GetEULAResponse> GetEULAAsync(string domainName, string userName)
        {
            GXPAuthentication.GetEULARequest inValue = new GXPAuthentication.GetEULARequest();
            inValue.domainName = domainName;
            inValue.userName = userName;
            return ((GXPAuthentication.GXPAuthenticationSoap)(this)).GetEULAAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<bool> IsSessionValidAsync(string loginSessionId)
        {
            return base.Channel.IsSessionValidAsync(loginSessionId);
        }
        
        public System.Threading.Tasks.Task<bool> ChangeLoginUserPasswordAsync(string loginSessionId, string newPassword)
        {
            return base.Channel.ChangeLoginUserPasswordAsync(loginSessionId, newPassword);
        }
        
        public System.Threading.Tasks.Task<int> ResetLoginUserPasswordAsync(string domainName, string loginUserName, string loginUserEmail)
        {
            return base.Channel.ResetLoginUserPasswordAsync(domainName, loginUserName, loginUserEmail);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.GXPAuthenticationSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.GXPAuthenticationSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.GXPAuthenticationSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://beta.intellinetics.com/IntellivueWebAPI/GXPAuthentication.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.GXPAuthenticationSoap12))
            {
                return new System.ServiceModel.EndpointAddress("https://beta.intellinetics.com/IntellivueWebAPI/GXPAuthentication.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            GXPAuthenticationSoap,
            
            GXPAuthenticationSoap12,
        }
    }
}
